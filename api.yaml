components:
  schemas:
    GenericResponse:
      properties:
        message:
          title: Message
          type: string
      required:
      - message
      title: GenericResponse
      type: object
    TelegramRegisterRequest:
      description: "auth_date: int\n            Временная метка (Unix timestamp) момента\
        \ аутентификации пользователя через Telegram Login Widget.\n            Используется\
        \ для проверки актуальности данных и защиты от подделки (Replay Attack).\n\
        \            Клиентская сторона должна передавать текущее время запроса и\
        \ сверять его с допустимым окном времени (например, 5–10 минут)."
      properties:
        auth_date:
          title: Auth Date
          type: integer
        email:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          title: Email
        first_name:
          title: First Name
          type: string
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone
        photo_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Photo Url
        telegram_id:
          title: Telegram Id
          type: integer
        username:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
      required:
      - telegram_id
      - first_name
      - auth_date
      title: TelegramRegisterRequest
      type: object
info:
  title: Backend API
  version: '1.0'
openapi: 3.1.0
paths:
  /:
    get:
      operationId: root__get
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
          description: Successful Response
      summary: Root
  /auth/register/telegram:
    post:
      description: 'Регистрирует пользователя через Telegram, используя данные, полученные
        от Telegram login widget (см. схему `TelegramRegisterRequest`).


        Если пользователь уже зарегистрирован, возвращается статус 200 и токен для
        верификации.

        Если создается новый пользователь, возвращается статус 201 и токен для аутентификации.'
      operationId: handle_tg_registration_auth_register_telegram_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelegramRegisterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Пользователь уже существует, возвращается токен
        '201':
          description: Пользователь зарегистрирован, возвращается токен
        '404':
          description: Not found
        '422':
          content:
            application/json:
              example:
                detail:
                - loc:
                  - body
                  - telegram_id
                  msg: field required
                  type: value_error.missing
          description: Ошибка валидации входных данных
        '500':
          content:
            application/json:
              example:
                detail: Internal Server Error
          description: Внутренняя ошибка сервера
      summary: Аутентификация / Регистрация Telegram-пользователя
      tags:
      - auth
  /health/:
    get:
      description: Возвращает статус сервера и проверяет соединение с БД.
      operationId: health_check_health__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '404':
          description: Not found
      summary: Проверка состояния сервера
      tags:
      - health
  /openapi.json:
    get:
      operationId: get_openapi_json_openapi_json_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Openapi Json
  /openapi.yaml:
    get:
      operationId: get_openapi_yaml_openapi_yaml_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Openapi Yaml
